/*
 * Copyright 2019 The Eggroll Authors. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
import "kv.proto";
import "storage-basic.proto";
import "basic-meta.proto";


package com.webank.ai.eggroll.api.computing.processor;

message ProcessConf {
    string namingPolicy = 1;
}

message TaskInfo {
    string task_id = 1;
    string function_id = 2;
    bytes function_bytes = 3;
    bool isInPlaceComputing = 4;
}

message UnaryProcess {
    TaskInfo info = 1;
    com.webank.ai.eggroll.api.storage.StorageLocator operand = 2;
    ProcessConf conf = 3;
    com.webank.ai.eggroll.api.core.SessionInfo session = 20;
}

message BinaryProcess {
    TaskInfo info = 1;
    com.webank.ai.eggroll.api.storage.StorageLocator left = 2;
    com.webank.ai.eggroll.api.storage.StorageLocator right = 3;
    ProcessConf conf = 4;
    com.webank.ai.eggroll.api.core.SessionInfo session = 20;
}

service ProcessService {
    rpc map (UnaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
    rpc mapValues (UnaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
    rpc join (BinaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
    rpc reduce (UnaryProcess) returns (stream com.webank.ai.eggroll.api.storage.Operand);
    rpc mapPartitions (UnaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
    rpc glom (UnaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
    rpc sample (UnaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);

    rpc subtractByKey(BinaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
    rpc filter (UnaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
    rpc union(BinaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
    rpc flatMap(UnaryProcess) returns (com.webank.ai.eggroll.api.storage.StorageLocator);
}