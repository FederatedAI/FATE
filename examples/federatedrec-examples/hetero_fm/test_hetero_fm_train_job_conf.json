{
  "initiator": {
    "role": "guest",
    "party_id": 10000
  },
  "job_parameters": {
    "work_mode": 0
  },
  "role": {
    "guest": [
      10000
    ],
    "host": [
      10000
    ],
    "arbiter": [
      10000
    ]
  },
  "role_parameters": {
    "guest": {
      "args": {
        "data": {
          "train_data": [
            {
              "name": "hetero_breast_b",
              "namespace": "hetero_guest_breast"
            }
          ],
          "eval_data": [
            {
              "name": "hetero_breast_b",
              "namespace": "hetero_guest_breast"
            }
          ]
        }
      },
      "dataio_0": {
        "with_label": [true],
        "label_name": ["y"],
        "label_type": ["int"],
        "output_format": ["dense"],
        "missing_fill": [true],
        "outlier_replace": [true]
      },
      "evaluation_0": {
          "eval_type": ["binary"],
          "pos_label": [1]
      }
    },
    "host": {
      "args": {
        "data": {
          "train_data": [
            {
              "name": "hetero_breast_a",
              "namespace": "hetero_host_breast"
            }
          ],
          "eval_data": [
            {
              "name": "hetero_breast_a",
              "namespace": "hetero_host_breast"
            }
          ]
        }
      },
      "dataio_0": {
        "with_label": [false],
        "output_format": ["dense"],
        "outlier_replace": [true]
      },
      "evaluation_0": {
        "need_run": [false]
      }
    }
  },
  "algorithm_parameters": {
    "hetero_fm_0": {
      "penalty": "L2",
      "optimizer": "sgd",
      "tol": 1e-5,
      "alpha": 0.01,
      "decay":1.5,
      "max_iter": 20,
      "converge_func": "diff",
      "batch_size": 128,
      "learning_rate": 0.1,
      "clip_gradient": 1.5,
      "init_param": {
        "init_method": "zeros",
      "embed_size": 10
      },
      "cv_param": {
        "n_splits": 5,
        "shuffle": false,
        "random_seed": 103,
        "need_cv": false,
        "evaluate_param": {
          "eval_type": "binary"
        }
      }
    },
    "intersect_0": {
      "intersect_method": "rsa",
      "sync_intersect_ids": true,
      "only_output_key": false
    }
  }
}